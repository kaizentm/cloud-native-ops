# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  push:
    branches:
      # - master
      - 'brysmith/**'

jobs:
  Build_Push_Azure_Vote_App_Image:
    runs-on: ubuntu-latest
    env:
      SRC_FOLDER: azure-vote
      AZ_ACR_NAME: gitopsflowacr
      IMAGE_ARTIFACT_PATH: $GITHUB_WORKSPACE/image_tags
      MANIFEST_ARTIFACT_PATH: $GITHUB_WORKSPACE/az-vote/manifests
      UTILS_ARTIFACT_PATH: $GITHUB_WORKSPACE/utils
      MANIFESTS_FOLDER: azure-vote-manifests
      MANIFESTS_REPO: https://dev.azure.com/csedevops/GitOps/_git/azure-vote-app-deployment
      PAT: ${{ secrets.PAT }}
    steps:
    - name: Checkout
      uses: actions/checkout@v2.3.4
    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    - name: Create Frontend Image Tags
      env:
        SOURCE_LOCATION: src/azure-vote-front 
        DOCKER_FILE: Dockerfile
        REPOSITORY: azvote/azure-vote-front
        TASKNAME: frontend_image   
      uses: Azure/cli@1.0.4
      with:
        inlineScript:  |
          chmod +x $GITHUB_WORKSPACE/code/buildContainerTemplate.sh
          $GITHUB_WORKSPACE/code/buildContainerTemplate.sh -f $SRC_FOLDER \
                                                           -g $GITHUB_WORKSPACE \
                                                           -s $SOURCE_LOCATION \
                                                           -u $AZ_ACR_NAME \
                                                           -r $REPOSITORY \
                                                           -t $TASKNAME \
                                                           -d $DOCKER_FILE
    - name: Create Backend Image Tags
      env:
        SOURCE_LOCATION: src/azure-vote-back
        DOCKER_FILE: Dockerfile
        REPOSITORY: azvote/azure-vote-back
        TASKNAME: backend_image   
      uses: Azure/cli@1.0.4
      with:
        inlineScript:  |
          chmod +x $GITHUB_WORKSPACE/code/buildContainerTemplate.sh
          $GITHUB_WORKSPACE/code/buildContainerTemplate.sh -f $SRC_FOLDER \
                                                           -g $GITHUB_WORKSPACE \
                                                           -s $SOURCE_LOCATION \
                                                           -u $AZ_ACR_NAME \
                                                           -r $REPOSITORY \
                                                           -t $TASKNAME \
                                                           -d $DOCKER_FILE
    - name: Upload Image Tags
      uses: actions/upload-artifact@v2.2.2
      with:
        name: image_tags
        path: $IMAGE_ARTIFACT_PATH
    - name: Upload Manifests Templates
      uses: actions/upload-artifact@v2.2.2
      with:
        name: manifests
        path: $MANIFEST_ARTIFACT_PATH
    - name: Upload utils
      uses: actions/upload-artifact@v2.2.2
      with:
        name: utils
        path: $UTILS_ARTIFACT_PATH
  Deploy_to_Dev:
    name: "Deploy to Dev"
    runs-on: ubuntu-latest
    env:
      MANIFESTS_BRANCH: dev
      ENVIRONMENT_NAME: Dev
    steps:
    - name: Checkout
      uses: actions/checkout@v2.3.4
    - name: Download Image Tags
      uses: actions/download-artifact@v2.0.8
      with:
        name: image_tags
        path: $IMAGE_ARTIFACT_PATH
    - name: Download Manifests Templates
      uses: actions/download-artifact@v2.0.8
      with:
        name: manifests
        path: $MANIFEST_ARTIFACT_PATH
    - name: Download utils
      uses: actions/download-artifact@v2.0.8
      with:
        name: utils
        path: $UTILS_ARTIFACT_PATH
    - name: Read Image Tags
      run: |
        for file in $IMAGE_ARTIFACT_PATH/*; do echo "##vso[task.setvariable variable=${file##*/}]$(cat $file)"; done 
    - name: Generate Manifests
      run: |
        $UTILS_ARTIFACT_PATH/generate-manifests.sh $MANIFEST_ARTIFACT_PATH gen_manifests
  #  - name: Create PR
  #    run: |
  #      $GITHUB_WORKSPACE/utils/create-pr.sh -s $GITHUB_WORKSPACE/gen_manifests -d $MANIFESTS_FOLDER -r $MANIFESTS_REPO -b $MANIFESTS_BRANCH -i $GITHUB_RUN_ID -t $PAT -e $ENVIRONMENT_NAME