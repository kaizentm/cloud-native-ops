trigger: none

resources:
  pipelines:
  - pipeline: az-vote-ci
    source: 'Azure vote app CI'

name: $(Date:yyyyMMdd)$(Rev:.r)

variables:
  - group: az-vote-app-dev
  - name: images_artifact_path
    value: $(Pipeline.Workspace)/az-vote-ci/image_tags
  - name: manifests_artifact_path
    value: $(Pipeline.Workspace)/az-vote-ci/manifests
  - name: utils_artifact_path
    value: $(Pipeline.Workspace)/az-vote-ci/utils


pool:
  vmImage: ubuntu-latest


stages:
  - stage: "deploy_dev"
    displayName: "Deploy to Dev"
    # variables:
    #   - group: az-vote-app-dev
    jobs:
    - deployment: "Deploy_AzureVote"
      environment: dev
      strategy:
        runOnce:
          deploy:   
            steps:  
              - task: Bash@3        
                name: "Read_Image_tags"
                displayName: "Read Image Tags"
                inputs:
                  targetType: 'inline'
                  script: |
                    for file in $(images_artifact_path)/*; do echo "##vso[task.setvariable variable=${file##*/}]$(cat $file)"; done
              - task: Bash@3        
                name: "Check_Image_tags"
                displayName: "Check Image Tags"
                inputs:
                  targetType: 'inline'
                  script: |
                    env
              - task: Bash@3        
                name: "Generate_Manifests"
                displayName: "Generate Manifests"
                inputs:
                  filePath: $(utils_artifact_path)/generate-manifests.sh
                  arguments: '$(manifests_artifact_path) gen_manifests'
              - task: Bash@3        
                name: "Check_Manifests"
                displayName: "Check Manifests"
                inputs:
                  targetType: 'inline'
                  script: |
                    ls -ltr $(Pipeline.Workspace)
                    ls -ltr gen_manifests
                    cat gen_manifests/gen_manifests.yaml
              - task: Bash@3        
                name: "Create_PR"
                displayName: "Create_PR"
                inputs:
                  filePath: $(utils_artifact_path)/create-pr.sh
                  arguments: '-s gen_manifests -d $MANIFESTS_FOLDER -r $MANIFESTS_REPO -b MANIFESTS_BRANCH -i $(Build.Number) -t $(PAT)'
                    
        # d ) DEST_FOLDER=${OPTARG};;
        # r ) DEST_REPO=${OPTARG};;
        # b ) DEST_BRANCH=${OPTARG};;
        # i ) DEPLOY_ID=${OPTARG};;
        # t ) PAT=${OPTARG};;

        
               
              
              
              
           
           
           