parameters:
  - name: GENERATED_MANIFEST_FOLDER
    default: $(Build.SourcesDirectory)/gen_manifests
    type: string
  - name: DEPLOY_BRANCH_NAME
    default: deploy/$(Build.BuildNumber)/eugene/$(MANIFESTS_BRANCH)
    type: string


steps:
# - checkout: self
# - script: |
#    ls -ltr 
#    ls -ltr gen_manifests
#    ls -ltr $(Build.SourcesDirectory)/gen_manifests

  
- checkout: Manifest
  persistCredentials: true

- task: Bash@3        
  name: "Generate_Manifests"
  displayName: "Generate Manifests"
  inputs:
    filePath: $(utils_artifact_path)/generate-manifests.sh
    arguments: '$(manifests_artifact_path) gen_manifests'

# - script: |
#    ls -ltr 
#    ls -ltr gen_manifests
#    ls -ltr $(Build.SourcesDirectory)/gen_manifests


- script: git config --global user.email $PR_USER_EMAIL & git config --global user.name $PR_USER_NAME
  displayName: Configure Git
  env:
    PR_USER_NAME: "Git Ops"
    PR_USER_EMAIL: "agent@gitops.com"  

- script: |
   echo "Create a new branch ${{ parameters.DEPLOY_BRANCH_NAME }}"  
   git checkout -b ${{ parameters.DEPLOY_BRANCH_NAME }} 
   rm -f .git/index.lock
   mkdir -p $(MANIFESTS_FOLDER)
   # cp -r ${{ parameters.GENERATED_MANIFEST_FOLDER }}/* $(MANIFESTS_FOLDER)/
   cp -r $(Build.SourcesDirectory)/gen_manifests/* $(MANIFESTS_FOLDER)/ && rm -R $(Build.SourcesDirectory)/gen_manifests/*
   git add -A
   git commit -m "deployment $(Build.BuildNumber)"
   git push --set-upstream origin ${{ parameters.DEPLOY_BRANCH_NAME }} 
  displayName: Add Generated Manifest to New Branch

- script: |
   echo $(System.AccessToken) | az devops login
   az devops configure --defaults organization=$(System.CollectionUri) project=$(System.TeamProject) --use-git-aliases true
   pr_response=$(az repos pr create --project $(System.TeamProject) --repository $(MANIFESTS_REPO) --target-branch $(MANIFESTS_BRANCH) --source-branch ${{ parameters.DEPLOY_BRANCH_NAME }}  --title "deployment $(Build.BuildNumber)" --squash -o json)
   export pr_num=$(echo $pr_response | jq '.pullRequestId')
   echo "##vso[task.setvariable variable=PR_NUM;isOutput=true]$pr_num"
   B64_PAT=$(printf ":$(PAT)" | base64) 
   echo "##vso[task.setvariable variable=TOKEN;isOutput=true]$B64_PAT"
  name: "Create_PR" 
  displayName: Create Pull Request 