
name: CI_CD_Dev

on:
  push:
    branches:
 #     - master
      - 'brysmith/**'
env:
  IMAGE_ARTIFACT_PATH: image_tags
  MANIFEST_ARTIFACT_PATH: azure-vote/manifests
  UTILS_ARTIFACT_PATH: utils
  MANIFESTS_FOLDER: azure-vote-manifests
  MANIFESTS_REPO: https://github.com/kaizentm/gitops-manifests
  PAT: ${{ secrets.PAT }}

jobs:
  Build_Push_Azure_Vote_App_Image:
    runs-on: ubuntu-latest
    env:
      SRC_FOLDER: azure-vote
      AZ_ACR_NAME: gitopsflowacr
    steps:
    - name: Checkout
      uses: actions/checkout@v2.3.4
    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    - name: Create Frontend Image Tags
      env:
        SOURCE_LOCATION: src/azure-vote-front 
        DOCKER_FILE: Dockerfile
        REPOSITORY: azvote/azure-vote-front
        TASKNAME: frontend_image   
      uses: Azure/cli@1.0.4
      with:
        inlineScript:  |
          chmod +x $GITHUB_WORKSPACE/code/buildContainerTemplate.sh
          $GITHUB_WORKSPACE/code/buildContainerTemplate.sh -f $SRC_FOLDER \
                                                           -g $GITHUB_WORKSPACE \
                                                           -s $SOURCE_LOCATION \
                                                           -u $AZ_ACR_NAME \
                                                           -r $REPOSITORY \
                                                           -t $TASKNAME \
                                                           -d $DOCKER_FILE
    - name: Create Backend Image Tags
      env:
        SOURCE_LOCATION: src/azure-vote-back
        DOCKER_FILE: Dockerfile
        REPOSITORY: azvote/azure-vote-back
        TASKNAME: backend_image   
      uses: Azure/cli@1.0.4
      with:
        inlineScript:  |
          chmod +x $GITHUB_WORKSPACE/code/buildContainerTemplate.sh
          $GITHUB_WORKSPACE/code/buildContainerTemplate.sh -f $SRC_FOLDER \
                                                           -g $GITHUB_WORKSPACE \
                                                           -s $SOURCE_LOCATION \
                                                           -u $AZ_ACR_NAME \
                                                           -r $REPOSITORY \
                                                           -t $TASKNAME \
                                                           -d $DOCKER_FILE
    - name: Upload Image Tags
      uses: actions/upload-artifact@v2.2.2
      with:
        name: image_tags
        path: ${{ github.workspace }}/${{ env.IMAGE_ARTIFACT_PATH }}
    - name: Upload Manifests Templates
      uses: actions/upload-artifact@v2.2.2
      with:
        name: manifests
        path: ${{ github.workspace }}/${{ env.MANIFEST_ARTIFACT_PATH }}
    - name: Upload utils
      uses: actions/upload-artifact@v2.2.2
      with:
        name: utils
        path: ${{ github.workspace }}/${{ env.UTILS_ARTIFACT_PATH }}
  Deploy_to_Dev:
    name: "Deploy to Dev"
    runs-on: ubuntu-latest
    needs: Build_Push_Azure_Vote_App_Image
    environment: az-vote-app-dev
    steps:
    - name: Checkout
      uses: actions/checkout@v2.3.4
    - name: Download Image Tags
      uses: actions/download-artifact@v2.0.8
      with:
        name: image_tags
        path: ${{ github.workspace }}/${{ env.IMAGE_ARTIFACT_PATH }}
    - name: Download Manifests Templates
      uses: actions/download-artifact@v2.0.8
      with:
        name: manifests
        path: ${{ github.workspace }}/${{ env.MANIFEST_ARTIFACT_PATH }}
    - name: Download Utils
      uses: actions/download-artifact@v2.0.8
      with:
        name: utils
        path: ${{ github.workspace }}/${{ env.UTILS_ARTIFACT_PATH }}
    - name: Read Image Tags
      run: |
        for file in ${{ github.workspace }}/${{ env.IMAGE_ARTIFACT_PATH }}/*; do echo "##vso[task.setvariable variable=${file##*/}]$(cat $file)"; done 
    - name: Generate Manifests
      run: |
        chmod +x ${{ github.workspace }}/${{ env.UTILS_ARTIFACT_PATH }}/generate-manifests.sh
        ${{ github.workspace }}/${{ env.UTILS_ARTIFACT_PATH }}/generate-manifests.sh $MANIFEST_ARTIFACT_PATH gen_manifests
    - name: Create PR
      run: |
        chmod +x ${{ github.workspace }}/${{ env.UTILS_ARTIFACT_PATH }}/create-pr.sh
        ${{ github.workspace }}/${{ env.UTILS_ARTIFACT_PATH }}/create-pr.sh -s ${{ github.workspace }}/gen_manifests -d $MANIFESTS_FOLDER -r $MANIFESTS_REPO -b ${{ secrets.$MANIFESTS_BRANCH }} -i $GITHUB_RUN_ID -t $PAT -e ${{ secrets.ENVIRONMENT_NAME }} -p ${{ secrets.$PLATFORM }}
