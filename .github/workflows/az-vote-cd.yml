
name: CD_Stage
 
on:
  repository_dispatch:
    types: [dev-sync-success]

jobs:
  Test_Dev:
    name: "Test Dev"
    runs-on: ubuntu-latest
    environment: az-vote-app-dev
    steps:
    - name: Checkout
      uses: actions/checkout@v2.3.4
    - name: Automated test
      run: |
        chmod +x ${{ github.workspace }}/${{ secrets.UTILS_ARTIFACT_PATH }}/smoke-test.sh
        ${{ github.workspace }}/${{ secrets.UTILS_ARTIFACT_PATH }}/smoke-test.sh ${{ secrets.CLUSTER_ENTRY_URL }}${{ secrets.DEMO_APP_URL }}
  Deploy_to_Stage:
      name: "Deploy to Stage"
      runs-on: ubuntu-latest
      needs: Test_Dev
      environment: az-vote-app-stage
      steps:
      - name: Checkout
        uses: actions/checkout@v2.3.4
        with:
          ref: ${{ github.event.client_payload.sha }}
      - name: Download Image Tags
        uses: dawidd6/action-download-artifact@v2
        with:
          name: image_tags
          workflow: az-vote-cicd.yml
          commit: ${{ github.event.client_payload.sha }}
          path: ${{ github.workspace }}/${{ secrets.IMAGE_ARTIFACT_PATH }}
      - name: Download Manifests Templates
        uses: dawidd6/action-download-artifact@v2
        with:
          name: manifests
          workflow: az-vote-cicd.yml
          commit: ${{ github.event.client_payload.sha }}
          path: ${{ github.workspace }}/${{ secrets.MANIFEST_ARTIFACT_PATH }}
      - name: Download Utils
        uses: dawidd6/action-download-artifact@v2
        with:
          name: utils
          workflow: az-vote-cicd.yml
          commit: ${{ github.event.client_payload.sha }}
          path: ${{ github.workspace }}/${{ secrets.UTILS_ARTIFACT_PATH }}
      - name: Read Image Tags
        env:
          ACTIONS_ALLOW_UNSECURE_COMMANDS: 'true'
        run: |
          for file in ${{ github.workspace }}/${{ secrets.IMAGE_ARTIFACT_PATH }}/*; do echo "::set-env name=${(file##*/)^^}::$(cat $file)"; done 
      - name: Generate Manifests
        run: |
          chmod +x ${{ github.workspace }}/${{ secrets.UTILS_ARTIFACT_PATH }}/generate-manifests.sh
          ${{ github.workspace }}/${{ secrets.UTILS_ARTIFACT_PATH }}/generate-manifests.sh ${{ secrets.MANIFEST_ARTIFACT_PATH }} gen_manifests
        env:
          TARGET_NAMESPACE: ${{ secrets.TARGET_NAMESPACE }}
          VOTE_APP_TITLE: ${{ secrets.VOTE_APP_TITLE }}
          DEMO_APP_URL: ${{ secrets.DEMO_APP_URL }}
          AZURE_VOTE_IMAGE_REPO: ${{ secrets.AZURE_VOTE_IMAGE_REPO }}
      - name: Create PR
        run: |
          chmod +x ${{ github.workspace }}/${{ secrets.UTILS_ARTIFACT_PATH }}/create-pr.sh
          ${{ github.workspace }}/${{ secrets.UTILS_ARTIFACT_PATH }}/create-pr.sh -s ${{ github.workspace }}/gen_manifests -d ${{ secrets.MANIFESTS_FOLDER }} -r ${{ secrets.MANIFESTS_REPO }} -b ${{ secrets.MANIFESTS_BRANCH }} -i $GITHUB_RUN_ID -t ${{ secrets.PAT }} -e ${{ secrets.ENVIRONMENT_NAME }} -p ${{ secrets.PLATFORM }}
